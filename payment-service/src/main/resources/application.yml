server:
  port: 0

eureka:
  client:
    register-with-eureka: true # Eureka서버에 클라이언트로 등록하겠다는 설정
    fetch-registry: true # Eureka 서버로부터 인스턴트들의 주기적으로 가져오겠다는 설정
    service-url:
      defaultZone: http://discovery-service:8761/eureka
  instance:
    instance-id: ${spring.cloud.client.hostname}:${spring.application.instance_id:${random.value}}

spring:
  application:
    name: payment-service
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:default}
  datasource:
    url: ${MYSQL_URL}
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.MySQLDialect
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect

  kafka:
    bootstrap-servers: kafka:29092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: all
      properties:
        enable.idempotence: true
        linger.ms: 5
    consumer:
      group-id: payment-service
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      enable-auto-commit: false
      auto-startup: true
    listener:
      ack-mode: MANUAL
      concurrency: 3
    admin:
      auto-startup: true
      properties:
        bootstrap.servers: kafka:29092

logging:
  pattern:
    console: "%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} [%thread] %-5level %logger{36} - [%X{traceId}] %msg%n"

# actuator & prometheus 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: always
    prometheus:
      access: unrestricted
  prometheus:
    metrics:
      export:
        enabled: true

---
server:
  port: 0

client:
  service-url:
    defaultZone: http://discovery-service:8761/eureka
instance:
  prefer-ip-address: true


# load-test 프로파일: 부하테스트용 설정
spring:
  application:
    name: payment-service
  config:
    activate:
      on-profile: load-test
  datasource:
    url: ${PAYMENT_MYSQL_URL_TEST}
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: create-drop

logging:
  level:
    hana.lovepet.paymentservice: INFO
  pattern:
    console: "%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} [LOAD-TEST] [%thread] %-5level %logger{36} - [%X{traceId}] %msg%n"
