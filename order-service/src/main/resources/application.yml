server:
  port: 8080

spring:
  datasource:
    url: ${MYSQL_URL}
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  data:
    redis:
      host: ${REDIS_HOST:localhost}      # Docker에서 redis, 로컬에서 localhost
      port: ${REDIS_PORT:6379}           # 기본 Redis 포트
      timeout: 2000ms                    # 2초 연결 타임아웃

  kafka:
    bootstrap-servers: kafka:29092     # 컨테이너 내부에서 접속
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: all
      properties:
        enable.idempotence: true
        linger.ms: 3
      # retries: 3 기본값으로 크게 잡힌다고 함
    consumer:
      group-id: order-service
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      enable-auto-commit: false
    listener:
      ack-mode: MANUAL
      concurrency: 3
